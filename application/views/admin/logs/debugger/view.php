<?php echo $header ?>
				<div class="pb-2 mt-4 mb-2">
					<h2>Лог дебаггера #<?php echo $log['id']?></h2>
				</div>
				<div class="card mb-4">
					<div class="card-header">Основная информация</div>
					<div class="card-body">
						<table class="table mb-0">
							<tr>
								<th>Метод:</th>
								<td><?php echo $log['method'] ?></td>
                            </tr>
                            <tr>
								<th>Информация о методе:</th>
								<td>
                                <?php 
                                switch($log['method'])
                                {
                                    case "dumpcap":
                                        echo "Это инструмент сниффинга сетевого трафика. Он позволяет захватывать пакетные данные в режиме реального времени из сети и записывать пакеты в файл.</br></br>Является составной частью Wireshark!";
                                        break;

                                    case "Process Hacker":
                                        echo "Утилита для мониторинга системных процессов и служб. Позволяет инжектировать сторонние DLL внутрь программы и изучать, дампить процесс.";
                                        break;

                                    case "Wireshark":
                                        echo "Программа-анализатор трафика для компьютерных сетей. Позволяет увидеть состав каждого пакета и IP-адрес целевого получателя.";
                                        break;

                                    case "IDA":
                                        echo "Интерактивный дизассемблер, который широко используется для реверс-инжиниринга.";
                                        break;

                                    case "IDA x64":
                                        echo "Интерактивный дизассемблер, который широко используется для реверс-инжиниринга.</br>x64-битная версия.";
                                        break;

                                    case "tcpdump":
                                        echo "Это инструмент сниффинга сетевого трафика. Он позволяет захватывать пакетные данные в режиме реального времени из сети и записывать пакеты в файл.";
                                        break;

                                    case "WinDBG":
                                        echo "Дизассемблер, который широко используется для реверс-инжиниринга.</br></br>Является составной частью Microsoft Visual Studio!";
                                        break;

                                    case "OllyDBG":
                                        echo "Дизассемблер, который широко используется для реверс-инжиниринга.";
                                        break;  
                                    
                                    case "pd64":
                                        echo "Инструмент для динамического дампинга процессов из памяти обратно на диск для анализа.";
                                        break;
                                        
                                    case "DebugString":
                                        echo "Обнаружен дебаггер!</br>Определен с помощью отправки строку в отладчик для отображения.";
                                        break;
                                    
                                    case "int2d":
                                        echo "Обнаружен дебаггер!</br>Определен с помощью asm-инструкции int2d.</br></br>Инструкция INT2D - это прерывание, которое используется в качестве точки останова программного обеспечения. Без присутствия отладчика, после перехода к инструкции INT2D, генерируется исключение EXCEPTION_BREAKPOINT (0x80000003) и будет вызван обработчик исключений. Если присутствует отладчик, управление не будет передано обработчику исключений.";
                                        break;
                                        
                                    case "int3":
                                        echo "Обнаружен дебаггер!</br>Определен с помощью asm-инструкции int3.</br></br>Инструкция INT3 - это прерывание, которое используется в качестве точки останова программного обеспечения. Без присутствия отладчика, после перехода к инструкции INT3, генерируется исключение EXCEPTION_BREAKPOINT (0x80000003) и будет вызван обработчик исключений. Если присутствует отладчик, управление не будет передано обработчику исключений.";
                                        break;

                                    case "SingleStep":
                                        echo "Обнаружен дебаггер!</br>Определен с помощью trapflag.</br></br>Вы включаете trapflag в текущем процессе и проверяете, вызвано ли исключение или нет. Если исключение не возникает, вы можете предположить, что отладчик “проглотил” исключение для нас и что программа отслеживается. Прелесть этого подхода в том, что он обнаруживает каждый отладчик, в пользовательском режиме или режиме ядра, потому что все они используют trapflag для отслеживания программы.";
                                        break;

                                    case "IsDebuggerPresent":
                                        echo "Обнаружен дебаггер!</br>Определен с помощью функции IsDebuggerPresent.";
                                        break;

                                    case "IsRemoteDebuggerPresent":
                                        echo "Обнаружен дебаггер!</br>Определен с помощью функции CheckRemoteDebuggerPresent.";
                                        break;

                                    case "PEB":
                                        echo "Обнаружен дебаггер!</br>Определен с помощью проверки флагов отладки, расположенных внутри структуры PEB.";
                                        break;

                                    case "HandleException":
                                        echo "Обнаружен дебаггер!</br>Определен с помощью отправки неизвестного исключения в функцию CloseHandle.";
                                        break;
                                } 
                                ?>
                                </td>
                            </tr>
                        </table>
                    </div>
                    </div>
                    <div class="card mb-4">
					<div class="card-header">Информация о пользователе</div>
					<div class="card-body">
						<table class="table mb-0">
                            <tr>
								<th>ID Сессии пользователя:</th>
                                <td><?php echo $log['sessionID']; ?></td>
							</tr>
                            <tr>
								<th>ID пользователя:</th>
                                <td><?php echo $log['userid']; ?></td>
							</tr>
                            <tr>
								<th>Имя пользователя:</th>
                                <td><?php echo $log['username']; ?></td>
							</tr>
                            <tr>
								<th>Дата обнаружения:</th>
                                <td><?php echo $log['date']; ?></td>
							</tr>
						</table>
					</div>
				</div>
<?php echo $footer ?>
